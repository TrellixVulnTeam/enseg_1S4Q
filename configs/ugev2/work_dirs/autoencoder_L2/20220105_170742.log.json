{"env_info": "sys.platform: linux\nPython: 3.9.7 (default, Sep 16 2021, 13:09:58) [GCC 7.5.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 3090\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_11.1.TC455_06.29069683_0\nGCC: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0\nPyTorch: 1.9.1\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.3-Product Build 20210617 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.1\nOpenCV: 4.5.3\nMMCV: 1.3.16\nMMCV Compiler: GCC 9.3\nMMCV CUDA Compiler: 11.1\nenseg: 0.0.1+8e33434", "seed": 42, "exp_name": "autoencoder_L2.py", "enseg_version": "0.0.1+8e33434", "config": "dataset_type = 'UnpairedDataset'\ndata_root = '/home/wzx/weizhixiang/ensegment/data/enseg/nightcity'\naux_type = 'CityscapesDataset'\naux_root = '/home/wzx/weizhixiang/ensegment/data/enseg/cityscape'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ncrop_size = (256, 512)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations'),\n    dict(type='Resize', img_scale=(1024, 512), ratio_range=(0.5, 2.0)),\n    dict(type='RandomCrop', crop_size=(256, 512), cat_max_ratio=0.75),\n    dict(type='RandomFlip', prob=0.5),\n    dict(type='PhotoMetricDistortion'),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size=(256, 512), pad_val=0, seg_pad_val=255),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1024, 512),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=8,\n    workers_per_gpu=4,\n    train=dict(\n        type='UnpairedDataset',\n        data_root='/home/wzx/weizhixiang/ensegment/data/enseg/nightcity',\n        img_dir='image/train',\n        ann_dir='label/train',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations'),\n            dict(type='Resize', img_scale=(1024, 512), ratio_range=(0.5, 2.0)),\n            dict(type='RandomCrop', crop_size=(256, 512), cat_max_ratio=0.75),\n            dict(type='RandomFlip', prob=0.5),\n            dict(type='PhotoMetricDistortion'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size=(256, 512), pad_val=0, seg_pad_val=255),\n            dict(type='DefaultFormatBundle'),\n            dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n        ],\n        aux_dataset=dict(\n            type='CityscapesDataset',\n            data_root='/home/wzx/weizhixiang/ensegment/data/enseg/cityscape',\n            img_dir='image/train',\n            ann_dir='label/train',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations'),\n                dict(\n                    type='Resize',\n                    img_scale=(1024, 512),\n                    ratio_range=(0.5, 2.0)),\n                dict(\n                    type='RandomCrop',\n                    crop_size=(256, 512),\n                    cat_max_ratio=0.75),\n                dict(type='RandomFlip', prob=0.5),\n                dict(type='PhotoMetricDistortion'),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size=(256, 512), pad_val=0, seg_pad_val=255),\n                dict(type='DefaultFormatBundle'),\n                dict(type='Collect', keys=['img', 'gt_semantic_seg'])\n            ])),\n    val=dict(\n        type='UnpairedDataset',\n        data_root='/home/wzx/weizhixiang/ensegment/data/enseg/nightcity',\n        img_dir='image/val',\n        ann_dir='label/val',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        aux_dataset=dict(\n            type='CityscapesDataset',\n            data_root='/home/wzx/weizhixiang/ensegment/data/enseg/cityscape',\n            img_dir='image/val',\n            ann_dir='label/val',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(\n                    type='MultiScaleFlipAug',\n                    img_scale=(1024, 512),\n                    flip=False,\n                    transforms=[\n                        dict(type='Resize', keep_ratio=True),\n                        dict(type='RandomFlip'),\n                        dict(\n                            type='Normalize',\n                            mean=[123.675, 116.28, 103.53],\n                            std=[58.395, 57.12, 57.375],\n                            to_rgb=True),\n                        dict(type='ImageToTensor', keys=['img']),\n                        dict(type='Collect', keys=['img'])\n                    ])\n            ])),\n    test=dict(\n        type='UnpairedDataset',\n        data_root='/home/wzx/weizhixiang/ensegment/data/enseg/nightcity',\n        img_dir='image/test',\n        ann_dir='label/test',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1024, 512),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ],\n        aux_dataset=dict(\n            type='CityscapesDataset',\n            data_root='/home/wzx/weizhixiang/ensegment/data/enseg/cityscape',\n            img_dir='image/test',\n            ann_dir='label/test',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(\n                    type='MultiScaleFlipAug',\n                    img_scale=(1024, 512),\n                    flip=False,\n                    transforms=[\n                        dict(type='Resize', keep_ratio=True),\n                        dict(type='RandomFlip'),\n                        dict(\n                            type='Normalize',\n                            mean=[123.675, 116.28, 103.53],\n                            std=[58.395, 57.12, 57.375],\n                            to_rgb=True),\n                        dict(type='ImageToTensor', keys=['img']),\n                        dict(type='Collect', keys=['img'])\n                    ])\n            ])))\nlog_config = dict(\n    interval=5,\n    hooks=[\n        dict(type='TextLoggerHook', by_epoch=False, interval=5),\n        dict(type='VisualizationHook', by_epoch=False)\n    ])\ndist_params = dict(backend='nccl')\nrunner = dict(\n    type='DynamicIterBasedRunner',\n    is_dynamic_ddp=True,\n    pass_training_status=True)\nfind_unused_parameters = True\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\ncudnn_benchmark = True\nnorm_cfg = dict(type='SyncBN', requires_grad=True)\nnetwork = dict(\n    type='AutoEncoder',\n    rec=dict(\n        type='BaseTranslator',\n        encode_decode=dict(\n            type='ResnetGenerator',\n            in_channels=3,\n            out_channels=3,\n            base_channels=64,\n            num_down=5,\n            norm_cfg=dict(type='IN'),\n            use_dropout=False,\n            num_blocks=3,\n            padding_mode='reflect',\n            init_cfg=dict(type='normal', gain=0.02)),\n        losses_cfg=dict(type='PixelLoss', loss_weight=1.0, loss_type='L2')),\n    noise_std=dict(light=0.2, low=0.05))\noptimizer = dict(rec=dict(type='Adam', lr=0.001, betas=(0.5, 0.999)))\nlr_config = dict(policy='poly', power=0.9, min_lr=1e-06, by_epoch=False)\ntotal_iters = 1000\ncheckpoint_config = dict(by_epoch=False, interval=8000)\nevaluation = None\nwork_dir = './work_dirs/autoencoder_L2'\ngpu_ids = range(0, 2)\nseed = 42\n", "CLASSES": ["road", "sidewalk", "building", "wall", "fence", "pole", "traffic light", "traffic sign", "vegetation", "terrain", "sky", "person", "rider", "car", "truck", "bus", "train", "motorcycle", "bicycle"], "PALETTE": [[128, 64, 128], [244, 35, 232], [70, 70, 70], [102, 102, 156], [190, 153, 153], [153, 153, 153], [250, 170, 30], [220, 220, 0], [107, 142, 35], [152, 251, 152], [70, 130, 180], [220, 20, 60], [255, 0, 0], [0, 0, 142], [0, 0, 70], [0, 60, 100], [0, 80, 100], [0, 0, 230], [119, 11, 32]]}
{"mode": "train", "epoch": 1, "iter": 5, "lr": {"rec": 0.0009964028796628352}, "memory": 6007, "data_time": 0.3646, "rec.low.loss_PixelLoss_L2": 1.44718, "rec.light.loss_PixelLoss_L2": 1.49681, "loss": 2.94399, "time": 1.43627}
{"mode": "train", "epoch": 1, "iter": 10, "lr": {"rec": 0.000991904446571432}, "memory": 6007, "data_time": 0.12213, "rec.low.loss_PixelLoss_L2": 0.89953, "rec.light.loss_PixelLoss_L2": 0.88313, "loss": 1.78266, "time": 0.8731}
